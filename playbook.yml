---
- hosts: 127.0.0.1
  connection: local
  become: true
  gather_facts: true
  vars:
    user_name: rtomasik
  tasks:
    - name: Update & Upgrade APT packages
      apt:
        update_cache: true
        upgrade: yes

    - name: Install new packages
      apt:
        name:
          - nano
          - jq
          - curl
          - git
          - sudo
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest

    - name: Create a new user
      user:
        name: "{{ user_name }}"
        shell: /bin/bash
        create_home: true

    - name: Add user to sudoers without password prompt
      lineinfile:
        path: /etc/sudoers
        line: "{{ user_name }} ALL=(ALL:ALL) NOPASSWD: ALL"
        validate: 'visudo -cf %s'

    - name: Set authorized key taken from file
      authorized_key:
        user: "{{ user_name }}"
        state: present
        key: "{{ lookup('file', './id_ed25519.pub') }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

    - name: Add allowed users to sshd_config
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^AllowUsers'
        line: 'AllowUsers root {{ user_name }}'

    - name: Prohibit password login
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'

    - name: Restart SSH service
      service:
        name: sshd
        state: restarted

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Create a new group
      group:
        name: docker

    - name: Add the user to the group
      user:
        name: "{{ user_name }}"
        groups: docker
        append: yes

    - name: Run hello-world container
      become_user: "{{ user_name }}"
      command: docker run hello-world
      register: command_result

    - name: Log success message
      ansible.builtin.debug:
        msg: "Docker installed correctly."
      when: command_result.rc == 0  # Only log on success
